#:import colors kivymd.color_definitions.colors
#:import get_color_from_hex kivy.utils.get_color_from_hex
#:set mcolor0 get_color_from_hex(colors['Gray']['300'])
#:set mcolor1 get_color_from_hex(colors['Cyan']['A200'])
#:set mcolor2 get_color_from_hex(colors['Orange']['A400'])
#:set mcolor3 get_color_from_hex(colors['Purple']['A400'])
#:set mcolor4 get_color_from_hex(colors['Teal']['A400'])
#:set mcolor5 get_color_from_hex(colors['Blue']['A400'])
#:set mcolor6 get_color_from_hex(colors['Yellow']['A200'])
#:set mcolor7 get_color_from_hex(colors['Red']['A400'])
#:set mcolor8 get_color_from_hex(colors['Red']['900'])

<MyGraph>:

	xlabel: 'Time (micros)'
	ylabel: 'Volts (V)'
	xmax: 100000
	xmin: 0
	ymax: 13
	ymin: -13
	x_ticks_major: 10000
	x_ticks_minor: 10
	x_grid: True
	y_ticks_major: 1
	y_ticks_minor: 10
	y_grid: True
	x_grid_label: True
	y_grid_label: True


<CheckBoxLabel@BoxLayout>:
	text: 'ch'
	color: [1,0,0,1]
	size_hint: None, None
	size: self.minimum_size
	MDCheckbox:
		id: checkbox
		color: root.color
		size_hint: None, None
		size: 40, 40
		selected_color: root.color
		unselected_color: root.color
		active: True
		on_active: app.addremoveplot(root.text, *args)
	MDLabel:
		size_hint: None, None
		size: 60, 40
		id: label
		color: root.color
		text: root.text

<CheckGroup@MDCheckbox>:
	group: 'group1'


<CheckBoxLabelGroup@BoxLayout>:
	text: 'ch'
	color: [1,0,0,1]
	size_hint: None, None
	size: self.minimum_size
	active: False
	CheckGroup:
		id: checkbox
		color: root.color
		size_hint: None, None
		size: 40, 40
		selected_color: root.color
		unselected_color: root.color
		active: root.active
		on_active: app.addremovegraph(root.text, *args)
	MDLabel:
		id: label
		size_hint: None, None
		size: 60, 40
		color: root.color
		text: root.text

<ContentCustomSheet@MDFloatLayout>:
	size_hint_y: None
	height: '100dp'

	MDGridLayout:
		cols: 4
		size_hint: None, None
		size: self.minimum_size
		pos_hint: None, None
		pos_hint: {'center_x':.25, 'center_y':.5}

		CheckBoxLabel:
			id: chb0
			text: 'ch0'
			color: mcolor0
		CheckBoxLabel:
			id: chb1
			text: 'ch1'
			color: mcolor1
		CheckBoxLabel:
			id: chb2
			text: 'ch2'
			color: mcolor2
		CheckBoxLabel:
			id: chb3
			text: 'ch3'
			color: mcolor3
		CheckBoxLabel:
			id: chb4
			text: 'ch4'
			color: mcolor4
		CheckBoxLabel:
			id: chb5
			text: 'ch5'
			color: mcolor5
		CheckBoxLabel:
			id: chb6
			text: 'ch6'
			color: mcolor6
		CheckBoxLabel:
			id: chb7
			text: 'ch7'
			color: mcolor7


	MDGridLayout:
		cols: 3
		size_hint: None, None
		size: self.minimum_size
		pos_hint: None, None
		pos_hint: {'center_x':.75, 'center_y':.5}

		CheckBoxLabelGroup:
			text: 'None'
			color: mcolor0
			active: True
		CheckBoxLabelGroup:
			text: 'Temp'
			color: mcolor8
		CheckBoxLabelGroup:
			text: 'PS'
			color: mcolor1
		CheckBoxLabelGroup:
			text: 'refV'
			color: mcolor2
		CheckBoxLabelGroup:
			text: '-12V'
			color: mcolor3
		CheckBoxLabelGroup:
			text: '5V'
			color: mcolor4




MDNavigationLayout:
	ScreenManager:
		id: screen_manager

		MDScreen:
			name: 'measurescreen'
			id: measurescreen

			MDBoxLayout:
				orientation: 'vertical'
				id: measurescreenlayout

				MDToolbar:
					id: toolbarmeasure
					elevation: 10
					left_action_items: [['menu', lambda x: nav_drawer.set_state("open")]]
					right_action_items: [['cog', lambda x: app.bottomsheet()],['play', lambda x: app.start()],['stop', lambda x: app.stop()]]





		MDScreen:
			name: 'regulatepsscreen'
				
			MDBoxLayout:
				orientation: 'vertical'

				MDToolbar:
					id: toolbarregulateps
					elevation: 10
					left_action_items: [['menu', lambda x: nav_drawer.set_state("open")]]
					right_action_items: [['play', lambda x: app.callback()], ['stop', lambda x: app.callback()]]

				MDLabel:
					text: 'Regulate PS'
					halign: 'center'

		MDScreen:
			name: 'darkcurrentscreen'

			MDBoxLayout:
				orientation: 'vertical'

				MDToolbar:
					id: toolbardarkcurrent
					elevation: 10
					left_action_items: [['menu', lambda x: nav_drawer.set_state("open")]]
					right_action_items: [['play', lambda x: app.callback()], ['stop', lambda x: app.callback()]]

				MDLabel:
					text: 'Dark Current'
					halign: 'center'

		MDScreen:
			name: 'metadatascreen'

			MDBoxLayout:
				orientation: 'vertical'

				MDToolbar:
					id: toolbarsettings
					elevation: 10
					left_action_items: [['menu', lambda x: nav_drawer.set_state("open")]]

				MDLabel:
					text: 'Metadata Screen'
					halign: 'center'

		MDScreen:
			name: 'analyzescreen'

			MDBoxLayout:
				orientation: 'vertical'

				MDToolbar:
					id: toolbarmetadata
					elevation: 10
					left_action_items: [['menu', lambda x: nav_drawer.set_state("open")]]
					right_action_items: [['folder-search', lambda x: app.callback()]]

				MDLabel:
					text: 'Analyze'
					halign: 'center'



	MDNavigationDrawer:
		id: nav_drawer

		BoxLayout:
			orientation: 'vertical'
			spacing: '8dp'
			padding: '8dp'

			Image:
				source: 'images/g33.png'
				size_hint_y: None

			MDLabel:
				text: '  v.10.0'
				font_style: 'Caption'
				size_hint_y: None
				height: self.texture_size[1]

			ScrollView:

				MDList:
					OneLineIconListItem:
						text: 'Regulate Power'
						on_release:
							screen_manager.current = 'regulatepsscreen'
							nav_drawer.set_state('close')
						IconLeftWidget:
							icon: 'arrow-collapse-vertical'

					OneLineIconListItem:
						text: 'Dark Current'
						on_release:
							screen_manager.current = 'darkcurrentscreen'
							nav_drawer.set_state('close')
						IconLeftWidget:
							icon: 'chart-sankey'

					OneLineIconListItem:
						text: 'Measure'
						on_release:
							screen_manager.current = 'measurescreen'
							nav_drawer.set_state('close')
						IconLeftWidget:
							icon: 'chart-line'

					OneLineIconListItem:
						text: 'Metadata'
						on_release:
							screen_manager.current = 'metadatascreen'
							nav_drawer.set_state('close')
						IconLeftWidget:
							icon: 'database-edit'

					OneLineIconListItem:
						text: 'Analyze'
						on_release:
							screen_manager.current = 'analyzescreen'
							nav_drawer.set_state('close')
						IconLeftWidget:
							icon: 'chart-bell-curve'

					OneLineIconListItem:
						text: 'Turn Off'
						on_release:
							quit()
						IconLeftWidget:
							icon: 'power'
